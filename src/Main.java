
import java.util.ArrayList;

public class Main {


        public static void main(String[] args) {
            int[] vector10 = {4,6,8,9,10,3,6,5,7,-9};
//            int [] vector50 = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 30, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,29,28, 16, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50};
            int[] vector100 = {1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
            ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77};

            int [] vector1000 = {1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77};

            int [] vector3000 = {1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,
                    1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77
                    ,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14, 23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77,1, 4, 7, 8, 9, 14,
                    23, 47, 56, 60, 61, 63, 65, 66, 68, 69, 70, 73, 76, 77};

            Main m = new Main();
            long startTime = System.nanoTime();
            m.mergeSort(vector3000);
            long endTime = System.nanoTime() - startTime;

            System.out.println("Tiempo medido en un arreglo de tamaño " + vector3000.length);
            System.out.println("tiempo en nano segundos:" + endTime);
        }


        public int [] bubbleSort(int[]arr){
            for (int i = 0; i <arr.length ; i++) {
                for (int j = 0; j <arr.length ; j++) {
                    if(arr[j]<arr[i]){
                        int temp = arr[j];
                        arr[i] = arr[j];
                        arr[j] = temp;
                    }
                }
            }
            return arr;
        }


    public static void buscar2(int[]arr){
            // declaracion de variables acumuladoras
        int x = 0, y = 0;
        //comprobacion de cuantos numeros pares e impares hay
        for (int i = 0; i <arr.length ; i++) {
            if(arr[i]%2 == 0){
                x++;
            }
            else
                y++;
        }
        //creacion de arreglos temporales para almacenar los numeros pares e impares
        int[] temp = new int[x];
        int[] temp2 = new int[y];
        //asignacion de elementos en sus respectivos
        for (int i = 0, j = 0, k = 0; i <arr.length  ; i++) {
            if(arr[i]%2 == 0){
                temp[j++] = arr[i];
            }
            else{
                temp2[k++] = arr[i];
            }
        }
        //impresion
        System.out.println("Los numeros pares son:");
        for (int i = 0; i <temp.length ; i++) {
            System.out.println(temp[i]);
        }

        System.out.println("Los numeros impares son:");
        for (int i = 0; i <temp2.length ; i++) {
            System.out.println(temp2[i]);
        }
    }



            public static int busquedaBinaria(int  vector[], int dato){
                int inferior=0,superior=vector.length-1;
                while(inferior<=superior){
                    int centro= inferior  + (superior - inferior)/2;
                        if(vector[centro]==dato) {
                            return centro;
                        }
                        if(dato > vector [centro] ){
                            inferior=centro+1;
                        }
                        else {
                            superior=centro-1;
                            }
                }
                return -1;
            }

            // a y b estan ordenados
            public int[] merge(int []a, int[]b){
            int [] c = new int[a.length + b.length];
            int j =0, k = 0, i;
                for (i = 0; i < c.length && j < a.length && k < b.length; i++) {
                    if(a[j] < b[k]){
                        c[i] = a[j++];
                    }
                    else{
                        c[i] = b[k++];
                    }

                }

                for(; i< c.length;i++){
                    if(j<a.length){
                        c[i] = a[j++];
                    }
                    if(k<b.length){
                        if(k<b.length){
                            c[i] = b[k++];
                        }
                    }
                }

                return c;
            }


            public int [] mergeSort(int[] arr){
            // caso base
            if(arr.length == 1)
                return arr;

            int[] parteInferior = new int[arr.length/2];
            int[] parteSuperior = new int[arr.length - parteInferior.length];
            int i = 0;

                for (; i < parteInferior.length; i++) {
                    parteInferior[i] = arr[i];
                }

                for (int j = 0; j < parteSuperior.length; j++) {
                    parteSuperior[j] = arr[i+j];
                }

                // parte recursiva del caso recursivo

                return merge(mergeSort(parteInferior), mergeSort(parteSuperior));
            }

        }
